package au.edu.usc.bict_explorer.rules;

import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Map;
import java.util.Set;
import java.util.Map.Entry;
import javafx.application.Application;
import javafx.beans.Observable;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableRow;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.stage.Stage;
import javafx.collections.FXCollections;

public class ReportGui extends Application {

	private ArrayList<Hierarchy> hierarchy;
	TableView<String[]> table=new TableView<String[]>();
	ObservableList<String[]> data=FXCollections.observableArrayList();
	
	public ReportGui(ArrayList<Hierarchy> hierarchy) {
		this.hierarchy=hierarchy;
		
	}
	

	@Override
	public void start(Stage primaryStage) throws Exception {
		
		primaryStage.setTitle("Report");
		
		/*TableColumn column1=new TableColumn("ICT Career");
		column1.setMinWidth(200);
		TableColumn column2=new TableColumn("BICT minor");
		column2.setMinWidth(200);
		TableColumn column3=new TableColumn("Course");
		column3.setMinWidth(300);
	//	column1.setCellValueFactory(new PropertyValueFactory("career"));
		
		column2.setCellValueFactory(new PropertyValueFactory("minor"));
		column3.setCellValueFactory(new PropertyValueFactory("course"));*/
		GridPane gridPane = new GridPane();
		 final Label label = new Label("Career Book");
	        label.setFont(new Font("Arial", 20));
		gridPane.add(label, 0, 0);
	        /*Label careersLabel=null;
	        Label minorsLabel=null;
	        Label coursesLabel=null;*/
		int careerRow=1;
		 int minorRow=1;
		 int courseRow=1;
		 
		 int x=40;
		for (Hierarchy root : hierarchy) 
		{
			if(root.getCheckBox().isSelected())
			{
				Label careersLabel=new Label(root.getCheckBox().getText());
				 gridPane.add(careersLabel, 1, careerRow);
				for (Hierarchy child1 : root.getChild()) 
				{
					if(child1.getCheckBox().isSelected())
					{
						Label minorsLabel=new Label(child1.getCheckBox().getText());
						gridPane.add(minorsLabel, 6, minorRow);
						for (Hierarchy child2 : child1.getChild()) {
							if(child2.getCheckBox().isSelected()) {
								//data.add(new String[] {root.getCheckBox().getText(), child1.getCheckBox().getText(), child2.getCheckBox().getText()});
								System.out.println(root.getCheckBox().getText()+ child1.getCheckBox().getText()+ child2.getCheckBox().getText());
								Label coursesLabel=new Label(child2.getCheckBox().getText());
								gridPane.add(coursesLabel, x, courseRow);
								//courseRow++;
								x++;
						}
						
					}
						courseRow++;
						minorRow=minorRow+4;
				}
				
			}
				careerRow=careerRow+8;
		}
		}
		/*table.setItems(data);
		table.getColumns().addAll(column1, column2, column3);
		*/
		/*VBox vBox=new VBox();
		vBox.getChildren().addAll(label,table);
		Scene scene = new Scene(new Group());
		((Group)scene.getRoot()).getChildren().add(vBox);
		primaryStage.setScene(scene);
		primaryStage.show();
		*/
		
		// gridPane.add(buttonReport, 50, 16);
		 Scene scene = new Scene(gridPane);
	      primaryStage.setScene(scene);
	      primaryStage.show();
		
		
	}

}
